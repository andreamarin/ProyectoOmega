
package soapclients;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.11-b150120.1832
 * Generated source version: 2.2
 * 
 */
@WebService(name = "Login", targetNamespace = "http://soapservices/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface Login {


    /**
     * 
     * @param password
     * @param username
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "login", targetNamespace = "http://soapservices/", className = "soapclients.Login_Type")
    @ResponseWrapper(localName = "loginResponse", targetNamespace = "http://soapservices/", className = "soapclients.LoginResponse")
    @Action(input = "http://soapservices/Login/loginRequest", output = "http://soapservices/Login/loginResponse")
    public boolean login(
        @WebParam(name = "username", targetNamespace = "")
        String username,
        @WebParam(name = "password", targetNamespace = "")
        String password);

    /**
     * 
     * @param password
     * @param dbName
     * @param name
     * @param username
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "signup", targetNamespace = "http://soapservices/", className = "soapclients.Signup")
    @ResponseWrapper(localName = "signupResponse", targetNamespace = "http://soapservices/", className = "soapclients.SignupResponse")
    @Action(input = "http://soapservices/Login/signupRequest", output = "http://soapservices/Login/signupResponse")
    public boolean signup(
        @WebParam(name = "username", targetNamespace = "")
        String username,
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "password", targetNamespace = "")
        String password,
        @WebParam(name = "dbName", targetNamespace = "")
        String dbName);

}
